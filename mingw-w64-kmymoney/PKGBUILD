# Maintainer: Alf Cr√ºger <a.crueger at o2mail.de>

_realname=kmymoney

pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=5.1.3
pkgrel=1
pkgdesc=" (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64') 
url='http://www.aquamaniac.de/'
license=('gpl2')
depends=("${MINGW_PACKAGE_PREFIX}-glib2"
         "${MINGW_PACKAGE_PREFIX}-karchive-qt5"
         "${MINGW_PACKAGE_PREFIX}-kcoreaddons-qt5"
         "${MINGW_PACKAGE_PREFIX}-kconfig-qt5"
         "${MINGW_PACKAGE_PREFIX}-kconfigwidgets-qt5"
         "${MINGW_PACKAGE_PREFIX}-ki18n-qt5"
         "${MINGW_PACKAGE_PREFIX}-kcompletion-qt5"
         "${MINGW_PACKAGE_PREFIX}-kcmutils-qt5"
         "${MINGW_PACKAGE_PREFIX}-kitemmodels-qt5"
         "${MINGW_PACKAGE_PREFIX}-kitemviews-qt5"
         "${MINGW_PACKAGE_PREFIX}-kservice-qt5"
         "${MINGW_PACKAGE_PREFIX}-kwallet-qt5"
         "${MINGW_PACKAGE_PREFIX}-kxmlgui-qt5"
         "${MINGW_PACKAGE_PREFIX}-ktextwidgets-qt5"
         "${MINGW_PACKAGE_PREFIX}-knotifications-qt5"
         "${MINGW_PACKAGE_PREFIX}-kio-qt5"
         "${MINGW_PACKAGE_PREFIX}-kiconthemes-qt5"
         "${MINGW_PACKAGE_PREFIX}-kdewebkit-qt5"
         "${MINGW_PACKAGE_PREFIX}-kholidays-qt5"
         #"${MINGW_PACKAGE_PREFIX}-"
         #"${MINGW_PACKAGE_PREFIX}-"
         #"${MINGW_PACKAGE_PREFIX}-"
         #"${MINGW_PACKAGE_PREFIX}-"
         #"${MINGW_PACKAGE_PREFIX}-"
         "${MINGW_PACKAGE_PREFIX}-kactivities-qt5"
         
         
         "${MINGW_PACKAGE_PREFIX}-libical"
         "${MINGW_PACKAGE_PREFIX}-alkimia"
         "${MINGW_PACKAGE_PREFIX}-aqbanking"
         )
         
         #"${MINGW_PACKAGE_PREFIX}-kf5"
         
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-extra-cmake-modules")

source=("https://download.kde.org/stable/kmymoney/${pkgver}/src/${_realname}-${pkgver}.tar.xz")
sha256sums=(SKIP)

prepare() {
  cd "${srcdir}"/${_realname}-${pkgver}
  
  #patch -p1 -i "${srcdir}/0001-MAX_PATH.patch"
  #patch -Np1 -i "${srcdir}/0001-MAX_PATH.patch"
  #patch -p1 -i "${srcdir}/0001-MAX_PATH.patch"

  #autoreconf -fiv
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"
  mkdir -p "${srcdir}/build-${MSYSTEM}" && cd "${srcdir}/build-${MSYSTEM}"

  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    "${MINGW_PREFIX}"/bin/cmake.exe \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -DBUILD_{SHARED,STATIC}_LIBS=ON \
      ../${_realname}-${pkgver}

  "${MINGW_PREFIX}"/bin/cmake.exe --build .
}

check() {
  cd "${srcdir}/build-${MSYSTEM}"

  "${MINGW_PREFIX}"/bin/cmake.exe --build . --target test
}

package() {
  cd "${srcdir}/build-${MSYSTEM}"

  DESTDIR="${pkgdir}" "${MINGW_PREFIX}"/bin/cmake.exe --install .

  install -Dm644 "${srcdir}/${_realname}-${pkgver}/LICENSE" "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE"
}


#      CPPFLAGS="$REGEX_INCLUDES $GNUTLS_INCLUDES $INTL_INCLUDES" \
#      LDFLAGS="$REGEX_LDFLAGS -lregex $GNUTLS_LDFLAGS $INTL_LDFLAGS -lintl -liconv" \
